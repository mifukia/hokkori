<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>テストページ001</title>
    <script src="https://aframe.io/releases/0.8.0/aframe.min.js"></script>
    <script src="https://rawgit.com/mayognaise/aframe-gif-shader/master/dist/aframe-gif-shader.min.js"></script>
    <script type="text/javascript" src="/socket.io/socket.io.js"></script>
    <script src="https://code.jquery.com/jquery-2.2.4.min.js" integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=" crossorigin="anonymous"></script>
    <script src="https://unpkg.com/vue/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/lodash@4.17.10/lodash.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js"></script>
    <link rel='stylesheet' href='https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css' />
    <link rel='stylesheet' href='/stylesheets/style.css' />
</head>

<body>
    <div id="app">
        <div class="controller">
            <div class="controller__gameset" @click="gameStart">
                ゲーム開始
            </div>
            <div class="controller__gameset" @click="gameset">
                ゲームを終了する
            </div>
        </div>
        <div class="sercret" @click="sercret">
            ここを押せ
        </div>
        <div class="result">
            <div class="hokkori_list">
                <dl>
                    <dt>
                        名前
                    </dt>
                    <dd>
                        ほっこり①
                    </dd>
                    <dd>
                        ほっこり②
                    </dd>
                    <dd>
                        ほっこり③
                    </dd>
                    <dd>
                        TOTAL
                    </dd>
                </dl>
                <dl v-for="item in usersData_sort">
                    <dt>
                        {{item.username}}
                    </dt>
                    <dd>
                        {{item.firsthit}}
                    </dd>
                    <dd>
                        {{item.secondhit}}
                    </dd>
                    <dd>
                        {{item.thirdhit}}
                    </dd>
                    <dd>
                        {{item.hittotal}}
                    </dd>
                </dl>
            </div>

            <div class="hikkori_list" v-show="appear">
                <dl>
                    <dt>
                        名前
                    </dt>
                    <dd>
                        ひっこり①
                    </dd>
                    <dd>
                        ひっこり②
                    </dd>
                    <dd>
                        ひっこり③
                    </dd>
                    <dd>
                        TOTAL
                    </dd>
                </dl>
                <!-- ひっこり用リスト -->
                <dl v-for="item in usersData_sort">
                    <dt>
                        {{item.username}}
                    </dt>
                    <dd>
                        {{item.firstmiss}}
                    </dd>
                    <dd>
                        {{item.secondmiss}}
                    </dd>
                    <dd>
                        {{item.thirdmiss}}
                    </dd>
                    <dd>
                        {{item.misstotal}}
                    </dd>
                </dl>
            </div>
        </div>
    </div>
    <script>
        const socket = io();
        const master = new Vue({
            el: '#app',
            data: {
                usersData: [],
                appear: false
            },
            computed: {
                usersData_sort:function(){
                    return _.orderBy(this.usersData, 'hittotal', 'desc');
                    return _.orderBy(this.usersData, 'misstotal', 'desc');
                }
            },
            created: function() {
                socket.on('login', (data) => {
                    this.usersData.push(data)
                })
                socket.on('getMessageHit', (data) => {
                    this.gethit(data.username,data.page,data.getnum);
                })
                socket.on('getMessageMiss', (data) => {
                    this.getmiss(data.username,data.page,data.getnum);
                })
            },
            methods: {
                gameStart: function() {
                    //sio.jsに通知する
                    socket.emit('gamestart');
                },
                gameset: function() {
                    //sio.jsに通知する
                    socket.emit('gameset');
                },
                gethit: function(name,page,num){
                    _.each(this.usersData,function(n){
                        if(n.username == name){
                            n[page] = num;
                            n.hittotal = n.hittotal+1;
                        }
                    })
                },
                getmiss: function(name,page,num){
                    _.each(this.usersData,function(n){
                        if(n.username == name){
                            n[page] = num;
                            n.misstotal = n.misstotal+1;
                        }
                    })
                },
                sercret: function() {
                    this.appear = true
                }
            }
        });
    </script>
</body>

</html>
